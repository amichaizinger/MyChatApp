<Window x:Class="ChatAppSOLID.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatAppSOLID"
        xmlns:vm="clr-namespace:ChatAppSOLID.ViewModels"
                xmlns:cc="clr-namespace:ChatAppSOLID.Converters" d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        mc:Ignorable="d"
        Title="Chat App" Height="600" Width="900" 
        WindowStartupLocation="CenterScreen" Background="#F3F4F6">






    <!-- Resources for styling and converters -->
    <Window.Resources>
        <cc:SenderIdToStyleConverter x:Key="SenderIdToStyleConverter" />


        <!-- Button hover effect -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#8B5CF6" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="10,5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7C3AED" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Converter for visibility of placeholder text -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <!-- Main Grid: 2 columns (3:1 ratio) -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <!-- Left Column: Chat Area -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="70" />
            </Grid.RowDefinitions>

            <!-- Top Bar -->
            <Border Grid.Row="0" Background="White" BorderBrush="#D1D5DB" BorderThickness="0,0,0,1">
                <Button Content="⋮" HorizontalAlignment="Left" Margin="10,0" x:Name="MenuButton"
        Command="{Binding OpenMenuCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Padding="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </Border>
            <Popup x:Name="MenuPopup" 
       PlacementTarget="{Binding ElementName=MenuButton}"
       Placement="Bottom"
       HorizontalOffset="0"
       VerticalOffset="5"
       StaysOpen="False" 
       IsOpen="{Binding IsMenuOpen}">

                <Border Background="White" BorderBrush="#D1D5DB" BorderThickness="1" CornerRadius="3">
                    <StackPanel Background="White" HorizontalAlignment="Left" Width="180">
                        <Button Content="Create New Group" Command="{Binding OpenGroupPopupCommand}" 
                    Background="White" Foreground="#333333" />
                        <Button Content="About Developer" Command="{Binding AboutDeveloperCommand}" 
                    Background="White" Foreground="#333333" />
                        <Button Content="AMC TO THE MOON 💎🙌🚀" Command="{Binding VisitWebsiteCommand}" 
                    Background="White" Foreground="#333333" />
                    </StackPanel>
                </Border>
            </Popup>


            <!-- Create Group Popup -->
            <Popup Name="CreateGroupPopup" 
       Placement="Center" 
       StaysOpen="false" 
       IsOpen="{Binding IsGroupPopupOpen}">
                <Border Background="WhiteSmoke" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                    <Grid Width="450" Height="350" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <!-- Title area -->
                            <RowDefinition Height="*" />
                            <!-- Content area -->
                            <RowDefinition Height="Auto" />
                            <!-- Button area -->
                        </Grid.RowDefinitions>

                        <!-- Title area -->
                        <Grid Grid.Row="0" Margin="0,0,0,10">
                            <TextBlock x:Name="PopupTitle" 
                           Text="Create New Group" 
                           FontSize="16" 
                           FontWeight="Bold"/>
                            <!-- Close Button -->
                            <Button Content="X" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top" 
                        Width="30" 
                        Height="30" 
                        Margin="5" 
                        Background="Red" 
                        Foreground="White" 
                        FontWeight="Bold" 
                        Command="{Binding CloseGroupPopupCommand}"/>
                        </Grid>

                        <!-- Content area -->
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Group Name -->
                            <TextBlock Grid.Row="0" 
                           Text="Group Name" 
                           FontWeight="Bold" 
                           Margin="0,0,0,5"/>

                            <TextBox Grid.Row="1" 
                         x:Name="GroupNameTextBox" 
                         Height="30" 
                         Margin="0,0,0,15"
                         Padding="5"
                         Text="{Binding NewGroupName, UpdateSourceTrigger=PropertyChanged}"/>

                            <!-- User Selection -->
                            <Border Grid.Row="2" 
                        BorderBrush="#DDDDDD" 
                        BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" 
                                   Text="Select Users" 
                                   FontWeight="Bold" 
                                   Margin="10,10,0,5"/>

                                    <ListView Grid.Row="1" 
                                  x:Name="UserListView" 
                                  ItemsSource="{Binding Users}"
                                  Margin="5"
                                  SelectionMode="Multiple">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <CheckBox Grid.Column="0" 
                                                  IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  VerticalAlignment="Center" 
                                                  Margin="0,0,10,0"/>

                                                    <TextBlock Grid.Column="1" 
                                                   Text="{Binding Username}" 
                                                   VerticalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Border>
                        </Grid>

                        <!-- Button area -->
                        <StackPanel Grid.Row="2" 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right" 
                        Margin="0,15,0,0">
                            <Button x:Name="CancelButton" 
                        Content="Cancel" 
                        Width="80" 
                        Height="30" 
                        Margin="0,0,10,0"
                        Command="{Binding CloseGroupPopupCommand}"/>
                            <Button x:Name="ConfirmButton" 
                        Content="Create Group" 
                        Width="100" 
                        Height="30" 
                        Background="#4CAF50" 
                        Foreground="White" 
                        Command="{Binding ConfirmCreateGroupCommand}"
                        IsEnabled="{Binding CanCreateGroup}"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Popup>

            <!-- About Developer Popup with Video -->
            <Popup Name="AboutDeveloperPopup" 
               Placement="Center" 
               StaysOpen="False" 
               IsOpen="{Binding IsAboutPopupOpen}">
                <Grid Background="Black" Opacity="0.7" Width="450" Height="350">
                    <!-- Close Button -->
                    <Button Content="X" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top" 
                        Width="30" 
                        Height="30" 
                        Margin="5" 
                        Background="Red" 
                        Foreground="White" 
                        FontWeight="Bold" 
                        Command="{Binding CloseAboutPopupCommand}"/>

                    <!-- Fireworks Video -->
                    <MediaElement Name="FireworksMedia" 
                             Width="Auto"  
                             Height="Auto" 
                             Source= "file:///C:\Users\sharo\source\repos\ChatAppSOLID\ChatAppSOLID\Views\AboutMe.mp4"
                      
                        Visibility="Visible" 
                             LoadedBehavior="{Binding MediaState}">
                    </MediaElement>
                </Grid>
            </Popup>

            <TextBlock x:Name="basad" Grid.Column="0"
                       Grid.Row="0"
                            Text="בס&quot;ד"
                            FontFamily="Times New Roman"
                            FontSize="14"
                            Margin="16,8"
                            HorizontalAlignment="Right"
                            FlowDirection="RightToLeft"/>

            <!-- Error Popup -->
            <Popup Name="ErrorPopup"
               IsOpen="{Binding IsErrorPopupOpen}"
               Placement="Center"
               AllowsTransparency="True"
               PopupAnimation="Fade"
               StaysOpen="False">
                <Border Background="#F0F0F0"
                    BorderBrush="Red"
                    BorderThickness="2"
                    CornerRadius="5"
                    Padding="10"
                    MinWidth="300"
                    MaxWidth="400">
                    <StackPanel>
                        <!-- Error Header -->
                        <TextBlock Text="Error"
                              FontSize="16"
                              FontWeight="Bold"
                              Foreground="Red"
                              Margin="0,0,0,10"/>

                        <!-- Error Message -->
                        <TextBlock Text="{Binding ErrorMessage}"
                              TextWrapping="Wrap"
                              FontSize="14"
                              Margin="0,0,0,20"/>

                        <!-- Close Button -->
                        <Button Content="Close"
                           Command="{Binding CloseErrorPopupCommand}"
                           HorizontalAlignment="Center"
                           Padding="10,5"
                           Background="#FF4444"
                           Foreground="White"
                           BorderThickness="0"
                           Cursor="Hand">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}"
                                                    CornerRadius="3">
                                                    <ContentPresenter HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FF6666"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
            </Popup>

            <!-- Messages Area -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding SelectedChat.Messages}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!-- Use the converter to apply the appropriate style based on SenderId -->
                            <Border Margin="10,5" Padding="10" CornerRadius="5">
                                <Border.Style>
                                    <MultiBinding Converter="{StaticResource SenderIdToStyleConverter}">
                                        <Binding Path="SenderId" />
                                        <Binding Path="DataContext.UserId" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
                                    </MultiBinding>
                                </Border.Style>
                                <StackPanel>
                                    <TextBlock Text="{Binding Content}" />
                                    <TextBlock Text="{Binding SentAt, StringFormat={}{0:HH:mm}}" FontSize="10" Opacity="0.7" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!-- Message Input with rounded corners and placeholder -->
            <Grid Grid.Row="2" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!-- Wrap TextBox in a Border for rounded corners -->
                <Border CornerRadius="5" BorderBrush="#D1D5DB" BorderThickness="1">
                    <Grid>
                        <TextBox x:Name="MessageInputBox" Text="{Binding MessageText, UpdateSourceTrigger=PropertyChanged}" 
                                 VerticalAlignment="Center" Padding="10" BorderThickness="0" />
                        <!-- Placeholder text overlay -->
                        <TextBlock Text="Type a message..." Padding="10" Foreground="Gray" 
                                   Visibility="{Binding Text, ElementName=MessageInputBox, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=False}" 
                                   IsHitTestVisible="False" />
                    </Grid>
                </Border>
                <Button Grid.Column="1" Content="→" Margin="10,0,0,0" Command="{Binding SendCommand}" />
            </Grid>
        </Grid>

        <!-- Right Column: Sidebar -->
        <Grid Grid.Column="1" Background="#F3F4F6">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Online Status -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                <Button Content="Online" Background="Green" Command="{Binding RefreshOnlineStatusCommand}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding}" />
                                <TextBlock Text=" ↻" Margin="5,0,0,0" />
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </StackPanel>

            <!-- Search Box with rounded corners and placeholder -->
            <Border Grid.Row="1" Margin="10" CornerRadius="5" BorderBrush="#D1D5DB" BorderThickness="1">
                <Grid>
                    <TextBox x:Name="SearchBox" Padding="5" BorderThickness="0"
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Text="Search chats..." Padding="5" Foreground="Gray" 
                               Visibility="{Binding Text, ElementName=SearchBox, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=False}" 
                               IsHitTestVisible="False" />
                </Grid>
            </Border>

            <!-- Chat List -->
            <ListBox Grid.Row="2" ItemsSource="{Binding FilteredChats}" SelectedItem="{Binding SelectedChat}" 
         Margin="10" BorderThickness="0" Background="Transparent">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="8,6" />
                        <Setter Property="Margin" Value="0,2" />
                        <Setter Property="Background" Value="White" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#EDE9FE" />
                                <Setter Property="BorderBrush" Value="#8B5CF6" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F5F3FF" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                <TextBlock Text="{Binding LatestMessagePreview}" Opacity="0.7" TextTrimming="CharacterEllipsis" />
                                <TextBlock Text="{Binding LatestMessageTime, StringFormat={}{0:HH:mm}}" FontSize="10" />
                            </StackPanel>

                            <!-- Optional: You can add notification indicators in the second column -->
                            <TextBlock Grid.Column="1" 
                           Text="●" 
                           Foreground="#8B5CF6" 
                           FontSize="14" 
                           VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           Visibility="{Binding HasUnreadMessages, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>